import Appointment from "../models/Appointment.js";
import Service from "../models/Service.js";

/**
 * üìÖ –ü–æ–ª—É—á–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å
 * @route GET /api/calendar
 * @query { date, serviceId }
 */
export const getCalendarForDate = async (req, res) => {
    try {
        const { date, serviceId } = req.query;

        if (!date) {
            return res.status(400).json({ message: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É" });
        }

        // –í—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–ª–æ—Ç—ã –≤—Ä–µ–º–µ–Ω–∏
        const allSlots = ["09:00", "12:00", "15:00"];

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä
        const filter = { date };
        if (serviceId) {
            filter.serviceId = serviceId;
        }

        // –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —ç—Ç—É –¥–∞—Ç—É
        const appointments = await Appointment.find(filter)
            .populate("serviceId", "name")
            .populate("userId", "name phone");

        // –ú–∞–ø–ø–∏–Ω–≥ –≤—Å–µ—Ö —Å–ª–æ—Ç–æ–≤
        const slots = allSlots.map((time) => {
            const appointment = appointments.find((a) => a.slotTime === time);

            if (appointment) {
                return {
                    time,
                    status: "booked",
                    appointment: {
                        _id: appointment._id,
                        name: appointment.name,
                        phone: appointment.phone,
                        service: appointment.serviceId.name,
                    }
                };
            } else {
                return {
                    time,
                    status: "free",
                };
            }
        });

        res.status(200).json({
            date,
            slots
        });

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:", error.message);
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ" });
    }
};
